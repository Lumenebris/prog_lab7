==============
Лабораторная 7
==============

`Created by : Елена Пономаренко`
`Licence : MIT`

Установка
---------

Предварительные шаги по установке:

- установить сервер PostgreSQL 12 https://www.postgresql.org/download/
- запустить pgAdmin и залогиниться пользователем postgres
- создать пользователя s265081 c паролем из задания (в Servers->PostgreSQL 12->Login/Group Roles)
- создать БД studs (в Servers->PostgreSQL 12->Databases)
- создать схему и таблицы: в терминале (командной строке) из каталога репозитория запустить

::

> psql -d studs -U postgres -W -f create_db.sql

- в Jetbrains Idea установить все зависимые библиотеки (JDBC-драйвер и т.д.)

Запуск сервера
--------------

Тип хранения - JSON-файл
------------------------

Режим обратной совместимости с предыдущими наработками.

После запуска сервера необходимо ввести

::

 connect <path_to_json_file> <port>

где,

* path_to_json_file - путь к файлу со списком объектов в формате JSON
* port - номер порта для подключения клиентов

Тип хранения - Postgres
------------------------

После запуска сервера необходимо ввести:

::

 connect <db_url> <port>

где,

* db_url - УРЛ доступа к БД следующего вида
    * dev - локальный сервер для разработки, соответствует jdbc:postgresql://localhost/studs
    * prod - кафедральный сервер, соответствует jdbc:postgresql://pg.cs.ifmo.ru/studs
    * jdbc:postgresql://<host>:<port>/<db> - JDBC-урл для доступа к другой БД
* port - номер порта для подключения клиентов


Используемые паттерны Gang Of Four (GoF)
----------------------------------------

Вот здесь шпаргалка от хабра - https://habr.com/ru/post/210288/.
Далее идут паттерны и имена классов:

* Командна (command) - commands.AbstractCommand и друзья
* Декоратор (decorator) - commands.AbstractProtectedCommand, производит аутентификацию, после чего вызывает execute
* Одиночка (singleton) - server.MailSender
* Посетитель (visitor) - tale.User, tale.Room
* Можно ещё пройтись по паттернам из библиотеки, типа ExecutorService, но это факультативно

Комментарии
-----------

* Для простоты использования пароль генерируется из 4 символов, по одному из каждого типа - цифры, специальные символы, буквы нижнего и верхнего регистров, но можно отрегулировать его длину и сложность через параметры метода User.generatePassword
* Пароль высылается в отдельном треде, чтобы не блокировать тред-обработчик команды от пользователя, т.е. чтобы пользователь не ждал завершения операции по отсылке почты, такое разделение - обычная практика при написании серверного кода.
